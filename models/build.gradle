/*
 * Copyright (c) 2016, University of Oslo
 *
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * Neither the name of the HISP project nor the names of its contributors may
 * be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply plugin: "java"

// used for complement apt plugin
// for generated sources
apply plugin: "idea"

// annotation processing tool plugin
apply plugin: "net.ltgt.apt"

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

def libraries = rootProject.ext.libraries

// using custom source sets in order to set clear
// boundaries between different type of tests
sourceSets {
    test {
        java {
            srcDirs = [
                    "src/unitTests/java",
                    "src/integrationTests/java"
            ]
        }
    }
}

// This allows us see tests execution progress in the output on the CI.
test {
    testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        exceptionFormat 'full'
    }
}

dependencies {
    // Jackson
    compile "com.fasterxml.jackson.core:jackson-databind:${libraries.jacksonVersion}"

    // Google's auto-value. Annotations are used only during compilation time, as well as
    // annotation processor which hoops up into compilation process
    compileOnly "com.google.auto.value:auto-value:${libraries.autovalue}"
    apt "com.google.auto.value:auto-value:${libraries.autovalue}"

    // Using javax annotations in conjunction with auto-value in order
    // to have optional values in models
    compileOnly "com.google.code.findbugs:jsr305:${libraries.javaxannotations}"

    // Test dependencies
    testCompile "junit:junit:${libraries.jUnitVersion}"
    testCompile "org.assertj:assertj-core:${libraries.assertJ}"
    testCompile "nl.jqno.equalsverifier:equalsverifier:${libraries.equalsVerifier}"
}
